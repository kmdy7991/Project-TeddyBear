plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
	id "org.sonarqube" version "4.4.1.3373"
}
sonar {
	properties {
		// 컴파일되면서 생성된 바이너리 파일을 분석
		property 'sonar.java.binaries', 'build/classes'
	}
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// MySQL
	runtimeOnly 'com.mysql:mysql-connector-j'

	// ModelMapper
	implementation 'org.modelmapper:modelmapper:3.1.1'

	// security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// oauth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// jwt
	implementation 'com.auth0:java-jwt:4.2.1'

	// webclient
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// youtube api
	implementation 'com.google.api-client:google-api-client:1.33.0'
	implementation 'com.google.oauth-client:google-oauth-client-jetty:1.23.0'
	implementation 'com.google.apis:google-api-services-youtube:v3-rev20230816-2.0.0'
	implementation 'com.google.http-client:google-http-client-jackson2:1.39.2'

	// json
	implementation 'org.json:json:20210307'

	// zipkin
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
	implementation 'io.micrometer:micrometer-observation'
	implementation 'io.github.openfeign:feign-micrometer'

	// actuator
	implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// prometheus
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
